import { View, TouchableOpacity } from "react-native";
import {
  BottomTabBarProps,
  BottomTabScreenProps,
} from "@react-navigation/bottom-tabs";
import { SafeAreaView } from "react-native";
import { Box, Center, Container, HStack, Pressable, Text } from "native-base";
// import responsive sizes
import {
  widthPercentageToDP as wp,
  heightPercentageToDP as hp,
} from "react-native-responsive-screen";
import Svg, { Path } from "react-native-svg";

type RootStackParamList = {
  Home: undefined;
  Profile: { userId: string };
  Feed: { sort: "latest" | "top" } | undefined;
};

type Props = BottomTabScreenProps<RootStackParamList, "Home"> &
  BottomTabBarProps;

function MyTabBar({ state, descriptors, navigation }: Props) {
  return (
    <Box
      style={{
        backgroundColor: "#000000",
      }}
    >
      <SafeAreaView>
        <Box
          backgroundColor="dark.50"
          
          style={{
            borderTopWidth: 1,
          }}
          borderColor="dark.200"
        >
          <HStack alignItems="center" justifyContent="center">
            {state.routes.map((route, index) => {
              const { options } = descriptors[route.key];
              const label =
                options.tabBarLabel !== undefined
                  ? options.tabBarLabel
                  : options.title !== undefined
                  ? options.title
                  : route.name;

              const isFocused = state.index === index;

              const onPress = () => {
                const event = navigation.emit({
                  type: "tabPress",
                  target: route.key,
                  canPreventDefault: true,
                });

                if (!isFocused && !event.defaultPrevented) {
                  // The `merge: true` option makes sure that the params inside the tab screen are preserved
                  navigation.navigate({ name: route.name, merge: true });
                }
              };

              const onLongPress = () => {
                navigation.emit({
                  type: "tabLongPress",
                  target: route.key,
                });
              };

              return (
                <Pressable
                  accessibilityRole="button"
                  accessibilityState={isFocused ? { selected: true } : {}}
                  accessibilityLabel={options.tabBarAccessibilityLabel}
                  testID={options.tabBarTestID}
                  onPress={onPress}
                  onLongPress={onLongPress}
                  style={{
                    flex: 1,
                    alignItems: "center",
                    justifyContent: "center",
                    padding: 16,
                  }}
                  key={index}
                >
                  <Center>
                    <Box
                      backgroundColor={isFocused ? "dark.200" : "dark.50"}
                      paddingX={5}
                      paddingY={2}
                      borderRadius={100}
                    >
                      {label === "Explorar" && <IconExplore />}
                      {label === "Registrar" && <IconRegister />}
                      {label === "Salvos" && <IconSalvos />}
                    </Box>
                    <Text
                      textAlign="center"
                      paddingTop="2"
                      color={"dark.500"}
                      fontSize="xs"
                      fontWeight="medium"
                    >
                      {label}
                    </Text>
                  </Center>
                </Pressable>
              );
            })}
          </HStack>
        </Box>
      </SafeAreaView>
    </Box>
  );
}

const IconExplore = () => {
  return (
    <Svg
      width="24"
      height="24"
      viewBox="0 0 24 23"
      style={{ paddingVertical: 10 }}
    >
      <Path
        d="M20.2537 17.135C20.7219 16.33 21.0732 15.41 21.0732 14.375C21.0732 11.5 18.7317 9.2 15.8049 9.2C12.878 9.2 10.5366 11.5 10.5366 14.375C10.5366 17.25 12.878 19.55 15.8049 19.55C16.8585 19.55 17.7951 19.205 18.6146 18.745L22.361 22.425L24 20.815L20.2537 17.135V17.135ZM15.8049 17.25C14.1659 17.25 12.878 15.985 12.878 14.375C12.878 12.765 14.1659 11.5 15.8049 11.5C17.4439 11.5 18.7317 12.765 18.7317 14.375C18.7317 15.985 17.4439 17.25 15.8049 17.25ZM11.7073 20.7V23C5.24488 23 0 17.848 0 11.5C0 5.152 5.24488 0 11.7073 0C17.3737 0 22.0917 3.956 23.1805 9.2H20.7571C20.3919 7.81061 19.701 6.52439 18.7395 5.44412C17.778 4.36385 16.5725 3.51948 15.2195 2.9785V3.45C15.2195 4.715 14.1659 5.75 12.878 5.75H10.5366V8.05C10.5366 8.6825 10.0098 9.2 9.36585 9.2H7.02439V11.5H9.36585V14.95H8.19512L2.58732 9.4415C2.43512 10.1085 2.34146 10.787 2.34146 11.5C2.34146 16.5715 6.54439 20.7 11.7073 20.7Z"
        fill="#CAC4D0"
      />
    </Svg>
  );
};
const IconRegister = () => {
  return (
    <Svg width="24" height="24" viewBox="0 0 21 23">
      <Path
        d="M2.79957 8.7939C2.79957 8.6145 2.87331 8.44244 3.00457 8.31558C3.13582 8.18872 3.31384 8.11745 3.49946 8.11745H13.298C13.4836 8.11745 13.6616 8.18872 13.7929 8.31558C13.9241 8.44244 13.9979 8.6145 13.9979 8.7939C13.9979 8.97331 13.9241 9.14537 13.7929 9.27223C13.6616 9.39909 13.4836 9.47036 13.298 9.47036H3.49946C3.31384 9.47036 3.13582 9.39909 3.00457 9.27223C2.87331 9.14537 2.79957 8.97331 2.79957 8.7939ZM3.49946 12.1762C3.31384 12.1762 3.13582 12.2474 3.00457 12.3743C2.87331 12.5012 2.79957 12.6732 2.79957 12.8526C2.79957 13.032 2.87331 13.2041 3.00457 13.331C3.13582 13.4578 3.31384 13.5291 3.49946 13.5291H7.69882C7.88444 13.5291 8.06246 13.4578 8.19372 13.331C8.32498 13.2041 8.39871 13.032 8.39871 12.8526C8.39871 12.6732 8.32498 12.5012 8.19372 12.3743C8.06246 12.2474 7.88444 12.1762 7.69882 12.1762H3.49946ZM2.79957 16.9114C2.79957 16.7319 2.87331 16.5599 3.00457 16.433C3.13582 16.3062 3.31384 16.2349 3.49946 16.2349H9.72011L8.78225 17.1413C8.63752 17.2811 8.50282 17.4303 8.37912 17.5878H3.49946C3.31384 17.5878 3.13582 17.5165 3.00457 17.3897C2.87331 17.2628 2.79957 17.0908 2.79957 16.9114ZM7.30828 20.2936H2.09968C1.91406 20.2936 1.73603 20.2224 1.60478 20.0955C1.47352 19.9686 1.39979 19.7966 1.39979 19.6172V3.38227C1.39979 3.20286 1.47352 3.03081 1.60478 2.90395C1.73603 2.77709 1.91406 2.70582 2.09968 2.70582H4.31834C4.46313 3.10165 4.73139 3.44433 5.08613 3.68664C5.44088 3.92894 5.86465 4.05895 6.29904 4.05872H10.4984C10.9328 4.05895 11.3565 3.92894 11.7113 3.68664C12.066 3.44433 12.3343 3.10165 12.4791 2.70582H14.6977C14.8834 2.70582 15.0614 2.77709 15.1926 2.90395C15.3239 3.03081 15.3976 3.20286 15.3976 3.38227V10.7475L15.5418 10.6082C15.9142 10.2483 16.3411 9.97229 16.7974 9.78423V3.38227C16.7974 2.84405 16.5762 2.32787 16.1824 1.9473C15.7887 1.56672 15.2546 1.35291 14.6977 1.35291H12.4791C12.3343 0.957077 12.066 0.614394 11.7113 0.372088C11.3565 0.129782 10.9328 -0.000219821 10.4984 2.79019e-07H6.29904C5.86465 -0.000219821 5.44088 0.129782 5.08613 0.372088C4.73139 0.614394 4.46313 0.957077 4.31834 1.35291H2.09968C1.54281 1.35291 1.00875 1.56672 0.614981 1.9473C0.221215 2.32787 0 2.84405 0 3.38227V19.6172C0 20.1554 0.221215 20.6716 0.614981 21.0521C1.00875 21.4327 1.54281 21.6465 2.09968 21.6465H7.00453C7.01499 21.4882 7.04029 21.331 7.08011 21.1771L7.30828 20.2936ZM11.1983 2.02936C11.1983 2.20877 11.1245 2.38083 10.9933 2.50769C10.862 2.63455 10.684 2.70582 10.4984 2.70582H6.29904C6.11341 2.70582 5.93539 2.63455 5.80414 2.50769C5.67288 2.38083 5.59914 2.20877 5.59914 2.02936C5.59914 1.84996 5.67288 1.6779 5.80414 1.55104C5.93539 1.42418 6.11341 1.35291 6.29904 1.35291H10.4984C10.684 1.35291 10.862 1.42418 10.9933 1.55104C11.1245 1.6779 11.1983 1.84996 11.1983 2.02936ZM9.7705 18.0979L16.5315 11.5633C17.0226 11.089 17.6886 10.8226 18.383 10.8229C19.0773 10.8231 19.7431 11.0899 20.2339 11.5647C20.7247 12.0394 21.0003 12.6831 21 13.3542C20.9997 14.0252 20.7237 14.6688 20.2325 15.1431L13.4715 21.6763C13.0777 22.0571 12.5842 22.3274 12.0438 22.4583L9.94688 22.9643C9.73837 23.0145 9.51998 23.0117 9.31291 22.9563C9.10583 22.9008 8.91712 22.7945 8.76511 22.6477C8.6131 22.5009 8.50295 22.3186 8.44537 22.1186C8.3878 21.9185 8.38474 21.7074 8.43651 21.5058L8.96143 19.4792C9.09568 18.9564 9.37549 18.4792 9.7705 18.0992V18.0979Z"
        fill="#CAC4D0"
      />
    </Svg>
  );
};

const IconSalvos = () => {
  return (
    <Svg width="24" height="24" viewBox="0 0 18 24">
      <Path
        d="M0 3C0 2.20435 0.31607 1.44129 0.87868 0.87868C1.44129 0.316071 2.20435 0 3 0L15 0C15.7956 0 16.5587 0.316071 17.1213 0.87868C17.6839 1.44129 18 2.20435 18 3V23.25C17.9999 23.3857 17.9631 23.5188 17.8933 23.6351C17.8236 23.7515 17.7236 23.8468 17.604 23.9108C17.4844 23.9748 17.3497 24.0052 17.2142 23.9988C17.0787 23.9923 16.9474 23.9492 16.8345 23.874L9 19.6515L1.1655 23.874C1.05256 23.9492 0.921345 23.9923 0.785837 23.9988C0.650329 24.0052 0.5156 23.9748 0.395999 23.9108C0.276399 23.8468 0.176406 23.7515 0.106671 23.6351C0.036936 23.5188 7.00806e-05 23.3857 0 23.25V3ZM3 1.5C2.60218 1.5 2.22064 1.65804 1.93934 1.93934C1.65804 2.22064 1.5 2.60218 1.5 3V21.849L8.5845 18.126C8.70759 18.0441 8.85215 18.0004 9 18.0004C9.14785 18.0004 9.29241 18.0441 9.4155 18.126L16.5 21.849V3C16.5 2.60218 16.342 2.22064 16.0607 1.93934C15.7794 1.65804 15.3978 1.5 15 1.5H3Z"
        fill="#CAC4D0"
      />
    </Svg>
  );
};

export default MyTabBar;
